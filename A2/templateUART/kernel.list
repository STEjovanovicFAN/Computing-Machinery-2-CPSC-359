
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea000502 	b	9410 <main>

Disassembly of section .text:

00009410 <main>:
    9410:	e3a0d902 	mov	sp, #32768	; 0x8000
    9414:	eb00012b 	bl	98c8 <EnableJTAG>
    9418:	eb00014d 	bl	9954 <InitUART>
    941c:	e59f0474 	ldr	r0, [pc, #1140]	; 9898 <List_Size_Error+0x10>
    9420:	e3a01030 	mov	r1, #48	; 0x30
    9424:	eb000188 	bl	9a4c <WriteStringUART>

00009428 <List_Size_Input>:
    9428:	e59f046c 	ldr	r0, [pc, #1132]	; 989c <List_Size_Error+0x14>
    942c:	e3a0102e 	mov	r1, #46	; 0x2e
    9430:	eb000185 	bl	9a4c <WriteStringUART>
    9434:	e59f0464 	ldr	r0, [pc, #1124]	; 98a0 <List_Size_Error+0x18>
    9438:	e3a01c01 	mov	r1, #256	; 0x100
    943c:	eb00018e 	bl	9a7c <ReadLineUART>
    9440:	e3500001 	cmp	r0, #1
    9444:	1a00010f 	bne	9888 <List_Size_Error>
    9448:	e59f2450 	ldr	r2, [pc, #1104]	; 98a0 <List_Size_Error+0x18>
    944c:	e5d23000 	ldrb	r3, [r2]
    9450:	e1a09003 	mov	r9, r3
    9454:	eb0000f3 	bl	9828 <qCheck>
    9458:	e3530039 	cmp	r3, #57	; 0x39
    945c:	ca000109 	bgt	9888 <List_Size_Error>
    9460:	e3530030 	cmp	r3, #48	; 0x30
    9464:	da000107 	ble	9888 <List_Size_Error>
    9468:	e2433030 	sub	r3, r3, #48	; 0x30
    946c:	e3a04000 	mov	r4, #0
    9470:	e3a05000 	mov	r5, #0

00009474 <doWhile>:
    9474:	e59f0428 	ldr	r0, [pc, #1064]	; 98a4 <List_Size_Error+0x1c>
    9478:	e0800005 	add	r0, r0, r5
    947c:	e3a01020 	mov	r1, #32
    9480:	eb000171 	bl	9a4c <WriteStringUART>
    9484:	e59f041c 	ldr	r0, [pc, #1052]	; 98a8 <List_Size_Error+0x20>
    9488:	e3a01005 	mov	r1, #5
    948c:	eb00017a 	bl	9a7c <ReadLineUART>

00009490 <four>:
    9490:	e3500004 	cmp	r0, #4
    9494:	ba000001 	blt	94a0 <three>
    9498:	ea0000d3 	b	97ec <errorB>
    949c:	eafffff4 	b	9474 <doWhile>

000094a0 <three>:
    94a0:	e3500003 	cmp	r0, #3
    94a4:	ba000014 	blt	94fc <two>
    94a8:	e59f63f8 	ldr	r6, [pc, #1016]	; 98a8 <List_Size_Error+0x20>
    94ac:	e5d67000 	ldrb	r7, [r6]
    94b0:	e2866001 	add	r6, r6, #1
    94b4:	e5d68000 	ldrb	r8, [r6]
    94b8:	e2866001 	add	r6, r6, #1
    94bc:	e5d69000 	ldrb	r9, [r6]
    94c0:	eb0000dd 	bl	983c <check_first>
    94c4:	eb0000e1 	bl	9850 <check_second>
    94c8:	eb0000e5 	bl	9864 <check_third>
    94cc:	e2477030 	sub	r7, r7, #48	; 0x30
    94d0:	e2488030 	sub	r8, r8, #48	; 0x30
    94d4:	e2499030 	sub	r9, r9, #48	; 0x30
    94d8:	e3a0a00a 	mov	sl, #10
    94dc:	e008089a 	mul	r8, sl, r8
    94e0:	e00a0a9a 	mul	sl, sl, sl
    94e4:	e007079a 	mul	r7, sl, r7
    94e8:	e0877008 	add	r7, r7, r8
    94ec:	e0877009 	add	r7, r7, r9
    94f0:	e3570064 	cmp	r7, #100	; 0x64
    94f4:	ca0000bc 	bgt	97ec <errorB>
    94f8:	ea000015 	b	9554 <store_element>

000094fc <two>:
    94fc:	e3500002 	cmp	r0, #2
    9500:	ba00000b 	blt	9534 <one>
    9504:	e59f639c 	ldr	r6, [pc, #924]	; 98a8 <List_Size_Error+0x20>
    9508:	e5d67000 	ldrb	r7, [r6]
    950c:	e2866001 	add	r6, r6, #1
    9510:	e5d68000 	ldrb	r8, [r6]
    9514:	eb0000c8 	bl	983c <check_first>
    9518:	eb0000cc 	bl	9850 <check_second>
    951c:	e2477030 	sub	r7, r7, #48	; 0x30
    9520:	e2488030 	sub	r8, r8, #48	; 0x30
    9524:	e3a0a00a 	mov	sl, #10
    9528:	e007079a 	mul	r7, sl, r7
    952c:	e0877008 	add	r7, r7, r8
    9530:	ea000007 	b	9554 <store_element>

00009534 <one>:
    9534:	e3500001 	cmp	r0, #1
    9538:	1a0000ab 	bne	97ec <errorB>
    953c:	e59f6364 	ldr	r6, [pc, #868]	; 98a8 <List_Size_Error+0x20>
    9540:	e5d67000 	ldrb	r7, [r6]
    9544:	e1a09007 	mov	r9, r7
    9548:	eb0000b6 	bl	9828 <qCheck>
    954c:	eb0000ba 	bl	983c <check_first>
    9550:	e2477030 	sub	r7, r7, #48	; 0x30

00009554 <store_element>:
    9554:	e59fa350 	ldr	sl, [pc, #848]	; 98ac <List_Size_Error+0x24>
    9558:	e7ca7004 	strb	r7, [sl, r4]
    955c:	e2844001 	add	r4, r4, #1
    9560:	e1540003 	cmp	r4, r3
    9564:	e2855020 	add	r5, r5, #32
    9568:	baffffc1 	blt	9474 <doWhile>
    956c:	e3a06001 	mov	r6, #1

00009570 <insertion_sort>:
    9570:	e1560003 	cmp	r6, r3
    9574:	aa00000e 	bge	95b4 <print_sorted>
    9578:	e1a07006 	mov	r7, r6

0000957c <inner_while_loop>:
    957c:	e2478001 	sub	r8, r7, #1
    9580:	e3570000 	cmp	r7, #0
    9584:	da000008 	ble	95ac <end_inner_while_loop>
    9588:	e59fa31c 	ldr	sl, [pc, #796]	; 98ac <List_Size_Error+0x24>
    958c:	e7da4007 	ldrb	r4, [sl, r7]
    9590:	e7da5008 	ldrb	r5, [sl, r8]
    9594:	e1540005 	cmp	r4, r5
    9598:	aa000001 	bge	95a4 <decrement_j>
    959c:	e7ca4008 	strb	r4, [sl, r8]
    95a0:	e7ca5007 	strb	r5, [sl, r7]

000095a4 <decrement_j>:
    95a4:	e2477001 	sub	r7, r7, #1
    95a8:	eafffff3 	b	957c <inner_while_loop>

000095ac <end_inner_while_loop>:
    95ac:	e2866001 	add	r6, r6, #1
    95b0:	eaffffee 	b	9570 <insertion_sort>

000095b4 <print_sorted>:
    95b4:	e59f02f4 	ldr	r0, [pc, #756]	; 98b0 <List_Size_Error+0x28>
    95b8:	e3a01016 	mov	r1, #22
    95bc:	eb000122 	bl	9a4c <WriteStringUART>
    95c0:	e3a04000 	mov	r4, #0
    95c4:	e59f52e0 	ldr	r5, [pc, #736]	; 98ac <List_Size_Error+0x24>

000095c8 <split_element>:
    95c8:	e7d50004 	ldrb	r0, [r5, r4]
    95cc:	e3500064 	cmp	r0, #100	; 0x64
    95d0:	0a00000d 	beq	960c <else>
    95d4:	e350000a 	cmp	r0, #10
    95d8:	ba00001d 	blt	9654 <elseif>
    95dc:	eb000087 	bl	9800 <mod>
    95e0:	e59f02b8 	ldr	r0, [pc, #696]	; 98a0 <List_Size_Error+0x18>
    95e4:	e5c07000 	strb	r7, [r0]
    95e8:	e5c08001 	strb	r8, [r0, #1]
    95ec:	e3a0a020 	mov	sl, #32
    95f0:	e5c0a002 	strb	sl, [r0, #2]
    95f4:	e3a01003 	mov	r1, #3
    95f8:	eb000113 	bl	9a4c <WriteStringUART>
    95fc:	e2844001 	add	r4, r4, #1
    9600:	e1540003 	cmp	r4, r3
    9604:	baffffef 	blt	95c8 <split_element>
    9608:	ea00001d 	b	9684 <print_median>

0000960c <else>:
    960c:	e3a07001 	mov	r7, #1
    9610:	e3a08000 	mov	r8, #0
    9614:	e3a09000 	mov	r9, #0
    9618:	e2877030 	add	r7, r7, #48	; 0x30
    961c:	e2888030 	add	r8, r8, #48	; 0x30
    9620:	e2899030 	add	r9, r9, #48	; 0x30
    9624:	e59f0274 	ldr	r0, [pc, #628]	; 98a0 <List_Size_Error+0x18>
    9628:	e5c07000 	strb	r7, [r0]
    962c:	e5c08001 	strb	r8, [r0, #1]
    9630:	e5c09002 	strb	r9, [r0, #2]
    9634:	e3a0a020 	mov	sl, #32
    9638:	e5c0a003 	strb	sl, [r0, #3]
    963c:	e3a01004 	mov	r1, #4
    9640:	eb000101 	bl	9a4c <WriteStringUART>
    9644:	e2844001 	add	r4, r4, #1
    9648:	e1540003 	cmp	r4, r3
    964c:	baffffdd 	blt	95c8 <split_element>
    9650:	ea00000b 	b	9684 <print_median>

00009654 <elseif>:
    9654:	e1a07000 	mov	r7, r0
    9658:	e2877030 	add	r7, r7, #48	; 0x30
    965c:	e59f023c 	ldr	r0, [pc, #572]	; 98a0 <List_Size_Error+0x18>
    9660:	e5c07000 	strb	r7, [r0]
    9664:	e3a0a020 	mov	sl, #32
    9668:	e5c0a001 	strb	sl, [r0, #1]
    966c:	e3a01002 	mov	r1, #2
    9670:	eb0000f5 	bl	9a4c <WriteStringUART>
    9674:	e2844001 	add	r4, r4, #1
    9678:	e1540003 	cmp	r4, r3
    967c:	baffffd1 	blt	95c8 <split_element>
    9680:	eaffffff 	b	9684 <print_median>

00009684 <print_median>:
    9684:	e59f0228 	ldr	r0, [pc, #552]	; 98b4 <List_Size_Error+0x2c>
    9688:	e3a01011 	mov	r1, #17
    968c:	eb0000ee 	bl	9a4c <WriteStringUART>
    9690:	e3a04000 	mov	r4, #0
    9694:	e1a05003 	mov	r5, r3

00009698 <median>:
    9698:	e2455002 	sub	r5, r5, #2
    969c:	e2844001 	add	r4, r4, #1
    96a0:	e3550000 	cmp	r5, #0
    96a4:	cafffffb 	bgt	9698 <median>
    96a8:	ba000000 	blt	96b0 <odd>
    96ac:	0a000027 	beq	9750 <even>

000096b0 <odd>:
    96b0:	e59f51f4 	ldr	r5, [pc, #500]	; 98ac <List_Size_Error+0x24>
    96b4:	e2444001 	sub	r4, r4, #1
    96b8:	e7d50004 	ldrb	r0, [r5, r4]
    96bc:	e3500064 	cmp	r0, #100	; 0x64
    96c0:	0a00000a 	beq	96f0 <else_odd>
    96c4:	e350000a 	cmp	r0, #10
    96c8:	ba000017 	blt	972c <elseif_odd>
    96cc:	eb00004b 	bl	9800 <mod>
    96d0:	e59f01c8 	ldr	r0, [pc, #456]	; 98a0 <List_Size_Error+0x18>
    96d4:	e5c07000 	strb	r7, [r0]
    96d8:	e5c08001 	strb	r8, [r0, #1]
    96dc:	e3a0a020 	mov	sl, #32
    96e0:	e5c0a002 	strb	sl, [r0, #2]
    96e4:	e3a01003 	mov	r1, #3
    96e8:	eb0000d7 	bl	9a4c <WriteStringUART>
    96ec:	ea00003a 	b	97dc <line>

000096f0 <else_odd>:
    96f0:	e3a07001 	mov	r7, #1
    96f4:	e3a08000 	mov	r8, #0
    96f8:	e3a09000 	mov	r9, #0
    96fc:	e2877030 	add	r7, r7, #48	; 0x30
    9700:	e2888030 	add	r8, r8, #48	; 0x30
    9704:	e2899030 	add	r9, r9, #48	; 0x30
    9708:	e59f0190 	ldr	r0, [pc, #400]	; 98a0 <List_Size_Error+0x18>
    970c:	e5c07000 	strb	r7, [r0]
    9710:	e5c08001 	strb	r8, [r0, #1]
    9714:	e5c09002 	strb	r9, [r0, #2]
    9718:	e3a0a020 	mov	sl, #32
    971c:	e5c0a003 	strb	sl, [r0, #3]
    9720:	e3a01004 	mov	r1, #4
    9724:	eb0000c8 	bl	9a4c <WriteStringUART>
    9728:	ea00002b 	b	97dc <line>

0000972c <elseif_odd>:
    972c:	e1a07000 	mov	r7, r0
    9730:	e2877030 	add	r7, r7, #48	; 0x30
    9734:	e59f0164 	ldr	r0, [pc, #356]	; 98a0 <List_Size_Error+0x18>
    9738:	e5c07000 	strb	r7, [r0]
    973c:	e3a0a020 	mov	sl, #32
    9740:	e5c0a001 	strb	sl, [r0, #1]
    9744:	e3a01002 	mov	r1, #2
    9748:	eb0000bf 	bl	9a4c <WriteStringUART>
    974c:	ea000022 	b	97dc <line>

00009750 <even>:
    9750:	e59f5154 	ldr	r5, [pc, #340]	; 98ac <List_Size_Error+0x24>
    9754:	e7d56004 	ldrb	r6, [r5, r4]
    9758:	e2844001 	add	r4, r4, #1
    975c:	e7d57004 	ldrb	r7, [r5, r4]
    9760:	e0868007 	add	r8, r6, r7
    9764:	e1a0a008 	mov	sl, r8
    9768:	e3a09000 	mov	r9, #0

0000976c <loopA>:
    976c:	e24aa002 	sub	sl, sl, #2
    9770:	e2899001 	add	r9, r9, #1
    9774:	e35a0000 	cmp	sl, #0
    9778:	cafffffb 	bgt	976c <loopA>
    977c:	ba000000 	blt	9784 <oddA>
    9780:	0a00000c 	beq	97b8 <evenA>

00009784 <oddA>:
    9784:	e1a07009 	mov	r7, r9
    9788:	e2877030 	add	r7, r7, #48	; 0x30
    978c:	e3a0802e 	mov	r8, #46	; 0x2e
    9790:	e3a09035 	mov	r9, #53	; 0x35
    9794:	e59f0104 	ldr	r0, [pc, #260]	; 98a0 <List_Size_Error+0x18>
    9798:	e5c07000 	strb	r7, [r0]
    979c:	e5c08001 	strb	r8, [r0, #1]
    97a0:	e5c09002 	strb	r9, [r0, #2]
    97a4:	e3a0a020 	mov	sl, #32
    97a8:	e5c0a003 	strb	sl, [r0, #3]
    97ac:	e3a01004 	mov	r1, #4
    97b0:	eb0000a5 	bl	9a4c <WriteStringUART>
    97b4:	ea000008 	b	97dc <line>

000097b8 <evenA>:
    97b8:	e1a07009 	mov	r7, r9
    97bc:	e2877030 	add	r7, r7, #48	; 0x30
    97c0:	e59f00d8 	ldr	r0, [pc, #216]	; 98a0 <List_Size_Error+0x18>
    97c4:	e5c07000 	strb	r7, [r0]
    97c8:	e3a0a020 	mov	sl, #32
    97cc:	e5c0a003 	strb	sl, [r0, #3]
    97d0:	e3a01004 	mov	r1, #4
    97d4:	eb00009c 	bl	9a4c <WriteStringUART>
    97d8:	eaffffff 	b	97dc <line>

000097dc <line>:
    97dc:	e59f00d4 	ldr	r0, [pc, #212]	; 98b8 <List_Size_Error+0x30>
    97e0:	e3a0102d 	mov	r1, #45	; 0x2d
    97e4:	eb000098 	bl	9a4c <WriteStringUART>
    97e8:	eaffff0e 	b	9428 <List_Size_Input>

000097ec <errorB>:
    97ec:	e59f00c8 	ldr	r0, [pc, #200]	; 98bc <List_Size_Error+0x34>
    97f0:	e3a01045 	mov	r1, #69	; 0x45
    97f4:	eb000094 	bl	9a4c <WriteStringUART>
    97f8:	eaffff1d 	b	9474 <doWhile>

000097fc <endLoop>:
    97fc:	ea00001d 	b	9878 <haltLoop$>

00009800 <mod>:
    9800:	e3a0a000 	mov	sl, #0

00009804 <mod_loop>:
    9804:	e240000a 	sub	r0, r0, #10
    9808:	e28aa001 	add	sl, sl, #1
    980c:	e350000a 	cmp	r0, #10
    9810:	aafffffb 	bge	9804 <mod_loop>
    9814:	e1a0700a 	mov	r7, sl
    9818:	e1a08000 	mov	r8, r0
    981c:	e2877030 	add	r7, r7, #48	; 0x30
    9820:	e2888030 	add	r8, r8, #48	; 0x30
    9824:	e1a0f00e 	mov	pc, lr

00009828 <qCheck>:
    9828:	e3590051 	cmp	r9, #81	; 0x51
    982c:	0a000011 	beq	9878 <haltLoop$>
    9830:	e3590071 	cmp	r9, #113	; 0x71
    9834:	0a00000f 	beq	9878 <haltLoop$>
    9838:	e1a0f00e 	mov	pc, lr

0000983c <check_first>:
    983c:	e3570030 	cmp	r7, #48	; 0x30
    9840:	baffffe9 	blt	97ec <errorB>
    9844:	e3570039 	cmp	r7, #57	; 0x39
    9848:	caffffe7 	bgt	97ec <errorB>
    984c:	e1a0f00e 	mov	pc, lr

00009850 <check_second>:
    9850:	e3580030 	cmp	r8, #48	; 0x30
    9854:	baffffe4 	blt	97ec <errorB>
    9858:	e3580039 	cmp	r8, #57	; 0x39
    985c:	caffffe2 	bgt	97ec <errorB>
    9860:	e1a0f00e 	mov	pc, lr

00009864 <check_third>:
    9864:	e3590030 	cmp	r9, #48	; 0x30
    9868:	baffffdf 	blt	97ec <errorB>
    986c:	e3590039 	cmp	r9, #57	; 0x39
    9870:	caffffdd 	bgt	97ec <errorB>
    9874:	e1a0f00e 	mov	pc, lr

00009878 <haltLoop$>:
    9878:	e59f0040 	ldr	r0, [pc, #64]	; 98c0 <List_Size_Error+0x38>
    987c:	e3a01012 	mov	r1, #18
    9880:	eb000071 	bl	9a4c <WriteStringUART>

00009884 <End_Program_Loop>:
    9884:	eafffffe 	b	9884 <End_Program_Loop>

00009888 <List_Size_Error>:
    9888:	e59f0034 	ldr	r0, [pc, #52]	; 98c4 <List_Size_Error+0x3c>
    988c:	e3a01046 	mov	r1, #70	; 0x46
    9890:	eb00006d 	bl	9a4c <WriteStringUART>
    9894:	eafffee3 	b	9428 <List_Size_Input>
    9898:	0000919a 	.word	0x0000919a
    989c:	000091ca 	.word	0x000091ca
    98a0:	00009087 	.word	0x00009087
    98a4:	00009282 	.word	0x00009282
    98a8:	00009187 	.word	0x00009187
    98ac:	00009190 	.word	0x00009190
    98b0:	000093a2 	.word	0x000093a2
    98b4:	000093b8 	.word	0x000093b8
    98b8:	000093db 	.word	0x000093db
    98bc:	0000923e 	.word	0x0000923e
    98c0:	000093c9 	.word	0x000093c9
    98c4:	000091f8 	.word	0x000091f8

000098c8 <EnableJTAG>:
    98c8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    98cc:	e59f0064 	ldr	r0, [pc, #100]	; 9938 <dowaitloop+0xc>
    98d0:	e0211001 	eor	r1, r1, r1
    98d4:	e5801000 	str	r1, [r0]
    98d8:	eb000012 	bl	9928 <dowait>
    98dc:	e59f0058 	ldr	r0, [pc, #88]	; 993c <dowaitloop+0x10>
    98e0:	e59f1058 	ldr	r1, [pc, #88]	; 9940 <dowaitloop+0x14>
    98e4:	e5801000 	str	r1, [r0]
    98e8:	eb00000e 	bl	9928 <dowait>
    98ec:	e0211001 	eor	r1, r1, r1
    98f0:	e5801000 	str	r1, [r0]
    98f4:	e59f0048 	ldr	r0, [pc, #72]	; 9944 <dowaitloop+0x18>
    98f8:	e5901000 	ldr	r1, [r0]
    98fc:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
    9900:	e3811a02 	orr	r1, r1, #8192	; 0x2000
    9904:	e5801000 	str	r1, [r0]
    9908:	e59f0038 	ldr	r0, [pc, #56]	; 9948 <dowaitloop+0x1c>
    990c:	e5901000 	ldr	r1, [r0]
    9910:	e59f2034 	ldr	r2, [pc, #52]	; 994c <dowaitloop+0x20>
    9914:	e1c11002 	bic	r1, r1, r2
    9918:	e59f2030 	ldr	r2, [pc, #48]	; 9950 <dowaitloop+0x24>
    991c:	e1811002 	orr	r1, r1, r2
    9920:	e5801000 	str	r1, [r0]
    9924:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009928 <dowait>:
    9928:	e3a02f4b 	mov	r2, #300	; 0x12c

0000992c <dowaitloop>:
    992c:	e2522001 	subs	r2, r2, #1
    9930:	1afffffd 	bne	992c <dowaitloop>
    9934:	e12fff1e 	bx	lr
    9938:	3f200094 	.word	0x3f200094
    993c:	3f200098 	.word	0x3f200098
    9940:	0bc00010 	.word	0x0bc00010
    9944:	3f200000 	.word	0x3f200000
    9948:	3f200008 	.word	0x3f200008
    994c:	00e3ffc0 	.word	0x00e3ffc0
    9950:	0061b6c0 	.word	0x0061b6c0

00009954 <InitUART>:
    9954:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9958:	e59f017c 	ldr	r0, [pc, #380]	; 9adc <WaitForCycles+0x10>
    995c:	e3a01001 	mov	r1, #1
    9960:	e5801000 	str	r1, [r0]
    9964:	e59f0174 	ldr	r0, [pc, #372]	; 9ae0 <WaitForCycles+0x14>
    9968:	e0211001 	eor	r1, r1, r1
    996c:	e5801000 	str	r1, [r0]
    9970:	e59f016c 	ldr	r0, [pc, #364]	; 9ae4 <WaitForCycles+0x18>
    9974:	e0211001 	eor	r1, r1, r1
    9978:	e5801000 	str	r1, [r0]
    997c:	e59f0164 	ldr	r0, [pc, #356]	; 9ae8 <WaitForCycles+0x1c>
    9980:	e3a01003 	mov	r1, #3
    9984:	e5801000 	str	r1, [r0]
    9988:	e59f015c 	ldr	r0, [pc, #348]	; 9aec <WaitForCycles+0x20>
    998c:	e0211001 	eor	r1, r1, r1
    9990:	e5801000 	str	r1, [r0]
    9994:	e59f0144 	ldr	r0, [pc, #324]	; 9ae0 <WaitForCycles+0x14>
    9998:	e0211001 	eor	r1, r1, r1
    999c:	e5801000 	str	r1, [r0]
    99a0:	e59f0148 	ldr	r0, [pc, #328]	; 9af0 <WaitForCycles+0x24>
    99a4:	e3a010c6 	mov	r1, #198	; 0xc6
    99a8:	e5801000 	str	r1, [r0]
    99ac:	e59f0140 	ldr	r0, [pc, #320]	; 9af4 <WaitForCycles+0x28>
    99b0:	e59f1140 	ldr	r1, [pc, #320]	; 9af8 <WaitForCycles+0x2c>
    99b4:	e5801000 	str	r1, [r0]
    99b8:	e3a0000e 	mov	r0, #14
    99bc:	e3a01002 	mov	r1, #2
    99c0:	eb000053 	bl	9b14 <SetGpioFunction>
    99c4:	e3a0000f 	mov	r0, #15
    99c8:	e3a01002 	mov	r1, #2
    99cc:	eb000050 	bl	9b14 <SetGpioFunction>
    99d0:	e59f0124 	ldr	r0, [pc, #292]	; 9afc <WaitForCycles+0x30>
    99d4:	e0211001 	eor	r1, r1, r1
    99d8:	e5801000 	str	r1, [r0]
    99dc:	e3a00096 	mov	r0, #150	; 0x96
    99e0:	eb000039 	bl	9acc <WaitForCycles>
    99e4:	e59f0114 	ldr	r0, [pc, #276]	; 9b00 <WaitForCycles+0x34>
    99e8:	e3a01903 	mov	r1, #49152	; 0xc000
    99ec:	e5801000 	str	r1, [r0]
    99f0:	e3a00096 	mov	r0, #150	; 0x96
    99f4:	eb000034 	bl	9acc <WaitForCycles>
    99f8:	e59f0100 	ldr	r0, [pc, #256]	; 9b00 <WaitForCycles+0x34>
    99fc:	e0211001 	eor	r1, r1, r1
    9a00:	e5801000 	str	r1, [r0]
    9a04:	e59f00d8 	ldr	r0, [pc, #216]	; 9ae4 <WaitForCycles+0x18>
    9a08:	e3a01003 	mov	r1, #3
    9a0c:	e5801000 	str	r1, [r0]
    9a10:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009a14 <PutCharUART>:
    9a14:	e59f20e8 	ldr	r2, [pc, #232]	; 9b04 <WaitForCycles+0x38>

00009a18 <putWaitLoop$>:
    9a18:	e5921000 	ldr	r1, [r2]
    9a1c:	e3110020 	tst	r1, #32
    9a20:	0afffffc 	beq	9a18 <putWaitLoop$>
    9a24:	e59f20dc 	ldr	r2, [pc, #220]	; 9b08 <WaitForCycles+0x3c>
    9a28:	e5820000 	str	r0, [r2]
    9a2c:	e1a0f00e 	mov	pc, lr

00009a30 <GetCharUART>:
    9a30:	e59f20cc 	ldr	r2, [pc, #204]	; 9b04 <WaitForCycles+0x38>

00009a34 <getWaitLoop$>:
    9a34:	e5921000 	ldr	r1, [r2]
    9a38:	e3110001 	tst	r1, #1
    9a3c:	0afffffc 	beq	9a34 <getWaitLoop$>
    9a40:	e59f20c0 	ldr	r2, [pc, #192]	; 9b08 <WaitForCycles+0x3c>
    9a44:	e5920000 	ldr	r0, [r2]
    9a48:	e1a0f00e 	mov	pc, lr

00009a4c <WriteStringUART>:
    9a4c:	e92d4070 	push	{r4, r5, r6, lr}
    9a50:	e1a04000 	mov	r4, r0
    9a54:	e1a05001 	mov	r5, r1
    9a58:	e3a06000 	mov	r6, #0

00009a5c <writeLoop$>:
    9a5c:	e3550000 	cmp	r5, #0
    9a60:	da000004 	ble	9a78 <writeLoopEnd$>
    9a64:	e7d40006 	ldrb	r0, [r4, r6]
    9a68:	ebffffe9 	bl	9a14 <PutCharUART>
    9a6c:	e2866001 	add	r6, r6, #1
    9a70:	e2455001 	sub	r5, r5, #1
    9a74:	eafffff8 	b	9a5c <writeLoop$>

00009a78 <writeLoopEnd$>:
    9a78:	e8bd8070 	pop	{r4, r5, r6, pc}

00009a7c <ReadLineUART>:
    9a7c:	e92d4070 	push	{r4, r5, r6, lr}
    9a80:	e1a04000 	mov	r4, r0
    9a84:	e1a05001 	mov	r5, r1
    9a88:	e3a06000 	mov	r6, #0

00009a8c <readLoop$>:
    9a8c:	e1360005 	teq	r6, r5
    9a90:	0a00000b 	beq	9ac4 <readLoopEnd$>
    9a94:	ebffffe5 	bl	9a30 <GetCharUART>
    9a98:	ebffffdd 	bl	9a14 <PutCharUART>
    9a9c:	e5c40000 	strb	r0, [r4]
    9aa0:	e2866001 	add	r6, r6, #1
    9aa4:	e2844001 	add	r4, r4, #1
    9aa8:	e330000d 	teq	r0, #13
    9aac:	1afffff6 	bne	9a8c <readLoop$>
    9ab0:	e3a0000a 	mov	r0, #10
    9ab4:	ebffffd6 	bl	9a14 <PutCharUART>
    9ab8:	e2444001 	sub	r4, r4, #1
    9abc:	e3a00000 	mov	r0, #0
    9ac0:	e5c40000 	strb	r0, [r4]

00009ac4 <readLoopEnd$>:
    9ac4:	e2460001 	sub	r0, r6, #1
    9ac8:	e8bd8070 	pop	{r4, r5, r6, pc}

00009acc <WaitForCycles>:
    9acc:	e2400001 	sub	r0, r0, #1
    9ad0:	e3500000 	cmp	r0, #0
    9ad4:	aafffffc 	bge	9acc <WaitForCycles>
    9ad8:	e1a0f00e 	mov	pc, lr
    9adc:	3f215004 	.word	0x3f215004
    9ae0:	3f215044 	.word	0x3f215044
    9ae4:	3f215060 	.word	0x3f215060
    9ae8:	3f21504c 	.word	0x3f21504c
    9aec:	3f215050 	.word	0x3f215050
    9af0:	3f215048 	.word	0x3f215048
    9af4:	3f215068 	.word	0x3f215068
    9af8:	0000010e 	.word	0x0000010e
    9afc:	3f200094 	.word	0x3f200094
    9b00:	3f200098 	.word	0x3f200098
    9b04:	3f215054 	.word	0x3f215054
    9b08:	3f215040 	.word	0x3f215040

00009b0c <GetGpioAddress>:
    9b0c:	e59f00cc 	ldr	r0, [pc, #204]	; 9be0 <GetGpio+0x44>
    9b10:	e1a0f00e 	mov	pc, lr

00009b14 <SetGpioFunction>:
    9b14:	e3500035 	cmp	r0, #53	; 0x35
    9b18:	93510007 	cmpls	r1, #7
    9b1c:	81a0f00e 	movhi	pc, lr
    9b20:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9b24:	e1a02000 	mov	r2, r0
    9b28:	ebfffff7 	bl	9b0c <GetGpioAddress>

00009b2c <functionLoop$>:
    9b2c:	e3520009 	cmp	r2, #9
    9b30:	8242200a 	subhi	r2, r2, #10
    9b34:	82800004 	addhi	r0, r0, #4
    9b38:	8afffffb 	bhi	9b2c <functionLoop$>
    9b3c:	e0822082 	add	r2, r2, r2, lsl #1
    9b40:	e1a01211 	lsl	r1, r1, r2
    9b44:	e3a03007 	mov	r3, #7
    9b48:	e1a03213 	lsl	r3, r3, r2
    9b4c:	e5902000 	ldr	r2, [r0]
    9b50:	e1c22003 	bic	r2, r2, r3
    9b54:	e1811002 	orr	r1, r1, r2
    9b58:	e5801000 	str	r1, [r0]
    9b5c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009b60 <SetGpio>:
    9b60:	e3500035 	cmp	r0, #53	; 0x35
    9b64:	81a0f00e 	movhi	pc, lr
    9b68:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9b6c:	e1a02000 	mov	r2, r0
    9b70:	ebffffe5 	bl	9b0c <GetGpioAddress>
    9b74:	e1a032a2 	lsr	r3, r2, #5
    9b78:	e1a03103 	lsl	r3, r3, #2
    9b7c:	e0800003 	add	r0, r0, r3
    9b80:	e202201f 	and	r2, r2, #31
    9b84:	e3a03001 	mov	r3, #1
    9b88:	e1a03213 	lsl	r3, r3, r2
    9b8c:	e3310000 	teq	r1, #0
    9b90:	05803028 	streq	r3, [r0, #40]	; 0x28
    9b94:	1580301c 	strne	r3, [r0, #28]
    9b98:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009b9c <GetGpio>:
    9b9c:	e3500035 	cmp	r0, #53	; 0x35
    9ba0:	81a0f00e 	movhi	pc, lr
    9ba4:	e92d4010 	push	{r4, lr}
    9ba8:	e1a04000 	mov	r4, r0
    9bac:	ebffffd6 	bl	9b0c <GetGpioAddress>
    9bb0:	e1a032a4 	lsr	r3, r4, #5
    9bb4:	e1a03103 	lsl	r3, r3, #2
    9bb8:	e0800003 	add	r0, r0, r3
    9bbc:	e204401f 	and	r4, r4, #31
    9bc0:	e3a03001 	mov	r3, #1
    9bc4:	e1a03413 	lsl	r3, r3, r4
    9bc8:	e5904034 	ldr	r4, [r0, #52]	; 0x34
    9bcc:	e0044003 	and	r4, r4, r3
    9bd0:	e3340000 	teq	r4, #0
    9bd4:	03a00000 	moveq	r0, #0
    9bd8:	13a00001 	movne	r0, #1
    9bdc:	e8bd8010 	pop	{r4, pc}
    9be0:	3f200000 	.word	0x3f200000
